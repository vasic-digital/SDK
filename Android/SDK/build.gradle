plugins {

    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

def fallbackToDefault = !project.hasProperty('interprocess_permission') ||
        "$interprocess_permission" == "null" || "$interprocess_permission".isEmpty() ||
        "$interprocess_permission".isBlank()

if (fallbackToDefault) {

    ext {

        interprocess_permission = "net.boba.sdk"
    }
}

println("The 'interprocess_permission' is: '$interprocess_permission'")

android {

    compileSdk 35
    namespace "${interprocess_permission}"

    defaultConfig {

        minSdk 28
        consumerProguardFiles "consumer-rules.pro"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [

                interprocess_permission: interprocess_permission
        ]

        resValue "string", "interprocess_permission", interprocess_permission
    }

    buildTypes {

        release {

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {

        jvmTarget = '11'

        freeCompilerArgs += [
                "-P",
                "plugin:androidx.compose.compiler.plugins.kotlin:featureFlag=StrongSkipping"
        ]
    }
    packagingOptions {

        jniLibs {

            excludes += ['META-INF/*']
        }

        resources {

            excludes += ['META-INF/*', 'LICENSE-2.0.txt', 'META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt']
        }
    }

}

dependencies {

    implementation project("${toolkit_context}:Main")
    implementation project("${toolkit_context}:Access")
    implementation project("${toolkit_context}:RootShell")
    implementation project("${toolkit_context}:RootTools")
    implementation project(':Toolkit:Interprocess')

    testImplementation project("${toolkit_context}:Main")
    testImplementation project("${toolkit_context}:Test")

    androidTestImplementation project("${toolkit_context}:Main")
    androidTestImplementation project("${toolkit_context}:Test")
}